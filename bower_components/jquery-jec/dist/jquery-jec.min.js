!function($){"use strict";$.jEC=function(){var lastKeyCode,defaults,Validators,EventHandlers,Combobox,pluginClass="jecEditableOption",options={},values={};return defaults={position:0,ignoreOptGroups:!1,maxLength:255,classes:[],styles:{},optionClasses:[],optionStyles:{},triggerChangeEvent:!1,focusOnNewOption:!1,useExistingOptions:!1,ignoredKeys:[],acceptedKeys:[[32,126],[191,382]]},Validators=function(){return{integer:function(value){return"number"==typeof value&&Math.ceil(value)===Math.floor(value)},keyRange:function(value){var min,max;return $.isPlainObject(value)?(min=value.min,max=value.max):$.isArray(value)&&2===value.length&&(min=value[0],max=value[1]),Validators.integer(min)&&Validators.integer(max)&&max>=min}}}(),EventHandlers=function(){var getKeyCode=function(event){var charCode=event.charCode;return void 0!==charCode&&0!==charCode?charCode:event.keyCode};return{keyDown:function(event){var option,value,keyCode=getKeyCode(event);switch(lastKeyCode=keyCode,keyCode){case 8:case 46:return option=$(this).find("option."+pluginClass),option.val().length>=1&&(value=option.text().substring(0,option.text().length-1),option.val(value).text(value).prop("selected",!0)),8!==keyCode}},keyPress:function(event){var option,value,specialKeys,text,select,keyCode=getKeyCode(event),opt=options[Combobox.getId($(this))],exit=!1;return 9!==keyCode&&13!==keyCode&&27!==keyCode?(specialKeys=[37,38,39,40,46],$.each(specialKeys,function(i,val){keyCode===val&&keyCode===lastKeyCode&&(exit=!0)}),exit||-1!==$.inArray(keyCode,opt.ignoredKeys)||($(this).find("option:selected").removeProp("selected"),-1!==$.inArray(keyCode,opt.acceptedKeys)&&(option=$(this).find("option."+pluginClass),text=option.text(),text.length<opt.maxLength&&(value=text+String.fromCharCode(getKeyCode(event)),option.val(value).text(value)),select=option.parents("select"),select.get(0).selectedIndex=opt.position)),!1):void 0},keyUp:function(){var opt=options[Combobox.getId($(this))];opt.triggerChangeEvent&&$(this).trigger("change")},change:function(){var opt=options[Combobox.getId($(this))];opt.useExistingOptions&&Combobox.setEditableOption($(this))}}}(),Combobox=function(){var Parameters,EditableOption,generateId,setup;return Parameters=function(){var Set,Remove,Handle;return Set=function(){var parseKeys,Handles;return parseKeys=function(value){var keys=[];return $.isArray(value)&&$.each(value,function(i,val){var j,min,max;if(Validators.keyRange(val))for($.isArray(val)?(min=val[0],max=val[1]):(min=val.min,max=val.max),j=min;max>=j;j+=1)keys.push(j);else"number"==typeof val&&Validators.integer(val)&&keys.push(val)}),keys},Handles=function(){return{integer:function(elem,name,value){var id=Combobox.getId(elem),opt=options[id];return void 0!==opt&&Validators.integer(value)&&value>=0?(opt[name]=value,!0):!1},bool:function(elem,name,value){var id=Combobox.getId(elem),opt=options[id];return void 0!==opt&&"boolean"==typeof value?(opt[name]=value,!0):!1},array:function(elem,name,value){"string"==typeof value&&(value=value.split(/\s+/));var id=Combobox.getId(elem),opt=options[id];return void 0!==opt&&$.isArray(value)?(opt[name]=value,!0):!1},object:function(elem,name,value){var id=Combobox.getId(elem),opt=options[id];void 0!==opt&&null!==value&&$.isPlainObject(value)&&(opt[name]=value)},keys:function(elem,name,value){var id=Combobox.getId(elem),opt=options[id];void 0!==opt&&$.isArray(value)&&(opt[name]=parseKeys(value))}}}(),{position:function(elem,value){if(Handles.integer(elem,"position",value)){var id=Combobox.getId(elem),opt=options[id],optionsCount=elem.find("option:not(."+pluginClass+")").length;value>optionsCount&&(opt.position=optionsCount)}},ignoreOptGroups:function(elem,value){Handles.bool(elem,"ignoreOptGroups",value)},maxLength:function(elem,value){if(Handles.integer(elem,"maxLength",value)){var id=Combobox.getId(elem),opt=options[id];(0>value||value>255)&&(opt.maxLength=255)}},classes:function(elem,value){Handles.array(elem,"classes",value)},optionClasses:function(elem,value){Handles.array(elem,"optionClasses",value)},styles:function(elem,value){Handles.object(elem,"styles",value)},optionStyles:function(elem,value){Handles.object(elem,"optionStyles",value)},triggerChangeEvent:function(elem,value){Handles.bool(elem,"triggerChangeEvent",value)},focusOnNewOption:function(elem,value){Handles.bool(elem,"focusOnNewOption",value)},useExistingOptions:function(elem,value){Handles.bool(elem,"useExistingOptions",value)},ignoredKeys:function(elem,value){Handles.keys(elem,"ignoredKeys",value)},acceptedKeys:function(elem,value){Handles.keys(elem,"acceptedKeys",value)}}}(),Remove=function(){var removeClasses,removeStyles;return removeClasses=function(elem,classes){$.each(classes,function(i,val){elem.removeClass(val)})},removeStyles=function(elem,styles){$.each(styles,function(key){elem.css(key,"")})},{classes:function(elem){var id=Combobox.getId(elem),opt=options[id];void 0!==opt&&removeClasses(elem,opt.classes)},optionClasses:function(elem){var id=Combobox.getId(elem),opt=options[id];void 0!==opt&&removeClasses(elem.find("option."+pluginClass),opt.optionClasses)},styles:function(elem){var id=Combobox.getId(elem),opt=options[id];void 0!==opt&&removeStyles(elem,opt.styles)},optionStyles:function(elem){var id=Combobox.getId(elem),opt=options[id];void 0!==opt&&removeStyles(elem.find("option."+pluginClass),opt.optionStyles)},all:function(elem){Remove.classes(elem),Remove.optionClasses(elem),Remove.styles(elem),Remove.optionStyles(elem)}}}(),Handle=function(){var setClasses,setStyles;return setClasses=function(elem,classes){$.each(classes,function(i,val){elem.addClass(String(val))})},setStyles=function(elem,styles){$.each(styles,function(key,val){elem.css(key,val)})},{position:function(elem){var option,uneditableOptions,container,opt=options[Combobox.getId(elem)];option=elem.find("option."+pluginClass),uneditableOptions=elem.find("option:not(."+pluginClass+")"),opt.position<uneditableOptions.length?(container=uneditableOptions.eq(opt.position),!opt.ignoreOptGroups&&container.parent("optgroup").length>0?uneditableOptions.eq(opt.position).parent().before(option):uneditableOptions.eq(opt.position).before(option)):elem.append(option)},maxLength:function(elem){var opt=options[Combobox.getId(elem)],option=elem.find("option."+pluginClass),val=option.text().substring(0,opt.maxLength);option.text(val).val(val)},classes:function(elem){var id=Combobox.getId(elem),opt=options[id];void 0!==opt&&setClasses(elem,opt.classes)},optionClasses:function(elem){var id=Combobox.getId(elem),opt=options[id];void 0!==opt&&setClasses(elem.find("option."+pluginClass),opt.optionClasses)},styles:function(elem){var id=Combobox.getId(elem),opt=options[id];void 0!==opt&&setStyles(elem,opt.styles)},optionStyles:function(elem){var id=Combobox.getId(elem),opt=options[id];void 0!==opt&&setStyles(elem.find("option."+pluginClass),opt.optionStyles)},focusOnNewOption:function(elem){var id=Combobox.getId(elem),opt=options[id];void 0!==opt&&opt.focusOnNewOption&&(elem.find(":not(option."+pluginClass+")").removeProp("selected"),elem.find("option."+pluginClass).prop("selected",!0))},useExistingOptions:function(elem){var id=Combobox.getId(elem),opt=options[id];void 0!==opt&&opt.useExistingOptions&&Combobox.setEditableOption(elem)},all:function(elem){Handle.position(elem),Handle.classes(elem),Handle.optionClasses(elem),Handle.styles(elem),Handle.optionStyles(elem),Handle.focusOnNewOption(elem),Handle.useExistingOptions(elem)}}}(),{Set:Set,Remove:Remove,Handle:Handle}}(),EditableOption=function(){return{init:function(elem){if(!elem.find("option."+pluginClass).length){var editableOption=$("<option>");editableOption.addClass(pluginClass),elem.append(editableOption)}elem.on("keydown",EventHandlers.keyDown),elem.on("keypress",EventHandlers.keyPress),elem.on("keyup",EventHandlers.keyUp),elem.on("change",EventHandlers.change),elem.on("click",EventHandlers.click)},destroy:function(elem){elem.find("option."+pluginClass).remove(),elem.off("keydown",EventHandlers.keyDown),elem.off("keypress",EventHandlers.keyPress),elem.off("keyup",EventHandlers.keyUp),elem.off("change",EventHandlers.change),elem.off("click",EventHandlers.click)}}}(),generateId=function(){for(var random;;)if(random=Math.floor(1e5*Math.random()),void 0===options[random])return random},setup=function(elem){EditableOption.init(elem),Parameters.Handle.all(elem)},{init:function(settings){return $(this).filter(":uneditable").each(function(){var id=generateId(),elem=$(this);elem.data("jecId",id),elem.data("jecActive",!0),options[id]=$.extend(!0,{},defaults),Parameters.Set.ignoredKeys(elem,options[id].ignoredKeys),Parameters.Set.acceptedKeys(elem,options[id].acceptedKeys),$.isPlainObject(settings)&&$.each(settings,function(key,val){if(void 0!==val)switch(key){case"position":Parameters.Set.position(elem,val);break;case"ignoreOptGroups":Parameters.Set.ignoreOptGroups(elem,val);break;case"maxLength":Parameters.Set.maxLength(elem,val);break;case"classes":Parameters.Set.classes(elem,val);break;case"optionClasses":Parameters.Set.optionClasses(elem,val);break;case"styles":Parameters.Set.styles(elem,val);break;case"optionStyles":Parameters.Set.optionStyles(elem,val);break;case"triggerChangeEvent":Parameters.Set.triggerChangeEvent(elem,val);break;case"focusOnNewOption":Parameters.Set.focusOnNewOption(elem,val);break;case"useExistingOptions":Parameters.Set.useExistingOptions(elem,val);break;case"ignoredKeys":Parameters.Set.ignoredKeys(elem,val);break;case"acceptedKeys":Parameters.Set.acceptedKeys(elem,val)}}),setup($(this))})},initJS:function(options,settings){var select=$("<select>"),addOptions=function(elem,options){$.isArray(options)&&($.each(options,function(i,val){$.isPlainObject(val)?$.each(val,function(key,value){if($.isArray(value)){var og=$("<optgroup>").attr("label",key);addOptions(og,value),og.appendTo(select)}else("number"==typeof value||"string"==typeof value)&&$("<option>").text(value).attr("value",key).appendTo(elem)}):("string"==typeof val||"number"==typeof val)&&$("<option>").text(val).attr("value",val).appendTo(elem)}),elem.find("option:first").prop("selected"))};return addOptions(select,options),select.jec(settings)},destroy:function(){return $(this).filter(":editable").each(function(){$(this).jecOff(),$.removeData($(this).get(0),"jecId"),$.removeData($(this).get(0),"jecActive")})},enable:function(){return $(this).filter(":editable").each(function(){if(!$(this).data("jecActive")){var id=Combobox.getId($(this)),value=values[id];$(this).data("jecActive",!0),setup($(this)),void 0!==value&&$(this).jecValue(value)}})},disable:function(){return $(this).filter(":editable").each(function(){if($(this).data("jecActive")){var val=$(this).find("option."+pluginClass).val();values[Combobox.getId($(this))]=val,Parameters.Remove.all($(this)),EditableOption.destroy($(this)),$(this).data("jecActive",!1)}})},value:function(value,setFocus){if($(this).filter(":editable").length>0){if(null===value||void 0===value)return $(this).find("option."+pluginClass).val();if("string"==typeof value||"number"==typeof value)return $(this).filter(":editable").each(function(){var option=$(this).find("option."+pluginClass);option.val(value).text(value),("boolean"!=typeof setFocus||setFocus)&&option.prop("selected",!0)})}},pref:function(name,value){return $(this).filter(":editable").length>0&&"string"==typeof name?null===value||void 0===value?options[Combobox.getId($(this))][name]:$(this).filter(":editable").each(function(){switch(name){case"position":Parameters.Set.position($(this),value),Parameters.Handle.position($(this));break;case"maxLength":Parameters.Set.maxLength($(this),value),Parameters.Handle.maxLength($(this));break;case"classes":Parameters.Remove.classes($(this)),Parameters.Set.classes($(this),value),Parameters.Handle.position($(this));break;case"optionClasses":Parameters.Remove.optionClasses($(this)),Parameters.Set.optionClasses($(this),value),Parameters.Set.optionClasses($(this));break;case"styles":Parameters.Remove.styles($(this)),Parameters.Set.styles($(this),value),Parameters.Set.styles($(this));break;case"optionStyles":Parameters.Remove.optionStyles($(this)),Parameters.Set.optionStyles($(this),value),Parameters.Handle.optionStyles($(this));break;case"focusOnNewOption":Parameters.Set.focusOnNewOption($(this),value),Parameters.Handle.focusOnNewOption($(this));break;case"useExistingOptions":Parameters.Set.useExistingOptions($(this),value),Parameters.Handle.useExistingOptions($(this));break;case"ignoredKeys":Parameters.Set.ignoredKeys($(this),value);break;case"acceptedKeys":Parameters.Set.acceptedKeys($(this),value)}}):void 0},setEditableOption:function(elem){var value=elem.find("option:selected").text();elem.find("option."+pluginClass).attr("value",elem.val()).text(value).prop("selected",!0)},getId:function(elem){return elem.data("jecId")}}}(),{init:Combobox.init,enable:Combobox.enable,disable:Combobox.disable,destroy:Combobox.destroy,value:Combobox.value,pref:Combobox.pref,initJS:Combobox.initJS,handleCursor:Combobox.handleCursor}}(),$.fn.extend({jec:$.jEC.init,jecOn:$.jEC.enable,jecOff:$.jEC.disable,jecKill:$.jEC.destroy,jecValue:$.jEC.value,jecPref:$.jEC.pref}),$.extend({jec:$.jEC.initJS}),$.extend($.expr[":"],{editable:function(a){var data=$(a).data("jecId");return null!==data&&void 0!==data},uneditable:function(a){var data=$(a).data("jecId");return null===data||void 0===data}})}(jQuery);